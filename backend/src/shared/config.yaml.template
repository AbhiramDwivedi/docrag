sync_root: "~/Documents/MyDocuments"
db_path: "data/docmeta.db"
vector_path: "data/vector.index"
knowledge_graph_path: "data/knowledge_graph.db"
chunk_size: 800
overlap: 150
embed_model: "sentence-transformers/all-MiniLM-L6-v2"
embed_model_version: "1.0.0"
batch_size: 32

# Phase 3: Advanced embedding models (choose one)
# embed_model: "intfloat/e5-base-v2"           # E5 model with query/passage prefixes (best quality)
# embed_model: "BAAI/bge-small-en-v1.5"       # BGE model (good balance of speed/quality)  
# embed_model: "thenlper/gte-base"             # GTE model (good general purpose)
# embed_model_version: "2.0.0"                # Update version when changing models
# Set your OpenAI API key here (safer than environment variables)
# Get your key from: https://platform.openai.com/api-keys
# Run 'python setup_openai.py' for secure setup
openai_api_key: "your-openai-api-key-here"

# Phase 1: Retrieval robustness parameters
retrieval_k: 100              # Number of initial chunks to retrieve before MMR
mmr_lambda: 0.7               # MMR balance: 1.0=pure relevance, 0.0=pure diversity  
mmr_k: 20                     # Final number of chunks to return after MMR selection
proper_noun_boost: 0.3        # Boost factor for metadata matches on proper noun queries
enable_debug_logging: false   # Enable detailed debug logging for retrieval pipeline

# Phase 2: Hybrid lexical search configuration
enable_hybrid_search: true    # Enable hybrid semantic + lexical search
hybrid_dense_weight: 0.6      # Weight for semantic search results in hybrid mode
hybrid_lexical_weight: 0.4    # Weight for lexical search results in hybrid mode
hybrid_score_normalize: "min-max"  # Score normalization method: "min-max" or "z-score"
enable_query_classification: true  # Enable automatic query intent classification

# Phase 4: Advanced features for improved precision and entity-awareness
enable_cross_encoder_reranking: false  # Enable cross-encoder reranking (requires additional dependencies)
cross_encoder_model: "ms-marco-MiniLM-L-6-v2"  # Cross-encoder model for reranking
cross_encoder_top_k: 20               # Number of results to keep after cross-encoder reranking
enable_query_expansion: false         # Enable query expansion for entity queries
query_expansion_method: "synonyms"    # Query expansion method: 'synonyms', 'related_terms'
enable_entity_indexing: false         # Enable entity-aware indexing during ingestion (requires spaCy)
entity_boost_factor: 0.2              # Boost factor for entity-document mappings

# Complex query analysis settings
default_latest_count: 10               # Default number of items when count not specified in latest queries
content_filter_widen_factor: 3         # Multiplier for initial metadata pool when content filtering follows
semantic_max_k: 50                     # Upper bound for k in semantic search step
