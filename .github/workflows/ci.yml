name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e backend[test]  # Install with test dependencies including pytest and test tools
        pip install pysqlite3-binary || true  # Linux-specific SQLite with FTS5
    
    - name: Cache artifacts
      uses: actions/cache@v4
      with:
        path: tests/fixtures/artifacts_v1
        key: artifacts-${{ hashFiles('tests/fixtures/corpus_v1/**', 'scripts/build_test_artifacts.py', 'config.test.yaml', 'backend/**') }}
    
    - name: Build golden artifacts
      run: python scripts/build_test_artifacts.py --rebuild --ci
    
    - name: Check import structure
      working-directory: backend
      run: |
        export PYTHONPATH="${PYTHONPATH}:./src"
        python -c "
        import sys
        from pathlib import Path
        sys.path.insert(0, str(Path('./src')))
        
        from shared.config import get_settings
        print('✅ Config module imports correctly')
        
        from querying.agents.agent import Agent
        print('✅ Agent module imports correctly')
        
        from ingestion.storage.vector_store import VectorStore
        print('✅ Vector store module imports correctly')
        "
    
    - name: Validate configuration template
      run: |
        python -c "
        import yaml
        from pathlib import Path
        config = yaml.safe_load(Path('backend/src/shared/config.yaml.template').read_text())
        required_keys = ['sync_root', 'db_path', 'vector_path', 'embed_model']  # Removed openai_api_key for tests
        for key in required_keys:
            assert key in config, f'Missing required config key: {key}'
        print('✅ Configuration template is valid')
        "
    
    - name: Run tests
      env:
        DOC_RAG_CONFIG: config.test.yaml
      run: |
        export PYTHONPATH="${PYTHONPATH}:./backend/src"
        python -m pytest tests/ -v --tb=short

  golden-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e backend[test]  # Install with comprehensive test dependencies
        pip install pysqlite3-binary || true  # Linux-specific SQLite with FTS5
    
    - name: Cache test artifacts
      uses: actions/cache@v4
      with:
        path: tests/fixtures/artifacts_v1
        key: artifacts-${{ hashFiles('tests/fixtures/corpus_v1/**', 'scripts/build_test_artifacts.py', 'config.test.yaml', 'backend/**/*.py') }}
        restore-keys: |
          artifacts-
    
    - name: Build test artifacts
      run: |
        python scripts/build_test_artifacts.py --rebuild --ci
    
    - name: Run golden retrieval tests
      env:
        DOC_RAG_CONFIG: config.test.yaml
        PYTHONPATH: backend/src
      run: |
        python -m pytest tests/test_embeddings_norm.py tests/test_mmr.py tests/test_fts5.py tests/test_hybrid_merge.py tests/test_golden_retrieval.py tests/test_perf_smoke.py -v --tb=short
    
    - name: Upload artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts-debug
        path: tests/fixtures/artifacts_v1/
        retention-days: 7
